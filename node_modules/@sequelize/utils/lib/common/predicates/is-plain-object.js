"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNotPlainObject = exports.isPlainObject = void 0;
const build_predicate_function_js_1 = require("../_internal/build-predicate-function.js");
const tuple = (0, build_predicate_function_js_1.buildAssertionFunction)((value) => {
    if (value === null || typeof value !== 'object') {
        return false;
    }
    const prototype = Object.getPrototypeOf(value);
    return prototype === null || prototype === Object.prototype;
}, (0, build_predicate_function_js_1.toBe)('a plain object (an object built using the literal syntax, or pojo())'));
/**
 * Returns whether something is a plain object
 * A plain object is an object that either has no prototype at all (no inherited methods) or only inherits from Object.prototype
 *
 * @example
 * isPlainObject({ a: 1 }); // true
 * isPlainObject(pojo()); // true
 * isPlainObject(new Date()); // false
 *
 * @param value The value to compare.
 */
exports.isPlainObject = tuple[0];
exports.isNotPlainObject = tuple[1];
