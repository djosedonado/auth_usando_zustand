{
  "version": 3,
  "sources": ["../../../src/dialects/snowflake/query-generator-internal.ts"],
  "sourcesContent": ["import { AbstractQueryGeneratorInternal } from '../abstract/query-generator-internal.js';\nimport type { AddLimitOffsetOptions } from '../abstract/query-generator.types.js';\nimport type { SnowflakeDialect } from './index.js';\n\nconst TECHNICAL_SCHEMA_NAMES = Object.freeze([\n  'INFORMATION_SCHEMA',\n  'PERFORMANCE_SCHEMA',\n  'SYS',\n  'information_schema',\n  'performance_schema',\n  'sys',\n]);\n\nexport class SnowflakeQueryGeneratorInternal<\n  Dialect extends SnowflakeDialect = SnowflakeDialect,\n> extends AbstractQueryGeneratorInternal<Dialect> {\n  getTechnicalSchemaNames() {\n    return TECHNICAL_SCHEMA_NAMES;\n  }\n\n  addLimitAndOffset(options: AddLimitOffsetOptions): string {\n    let fragment = '';\n    if (options.limit != null) {\n      fragment += ` LIMIT ${this.queryGenerator.escape(options.limit, options)}`;\n    } else if (options.offset) {\n      fragment += ` LIMIT NULL`;\n    }\n\n    if (options.offset) {\n      fragment += ` OFFSET ${this.queryGenerator.escape(options.offset, options)}`;\n    }\n\n    return fragment;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA+C;AAI/C,MAAM,yBAAyB,OAAO,OAAO;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAEM,MAAM,wCAEH,+DAAwC;AAAA,EAChD,0BAA0B;AACxB,WAAO;AAAA,EACT;AAAA,EAEA,kBAAkB,SAAwC;AACxD,QAAI,WAAW;AACf,QAAI,QAAQ,SAAS,MAAM;AACzB,kBAAY,UAAU,KAAK,eAAe,OAAO,QAAQ,OAAO,OAAO;AAAA,IACzE,WAAW,QAAQ,QAAQ;AACzB,kBAAY;AAAA,IACd;AAEA,QAAI,QAAQ,QAAQ;AAClB,kBAAY,WAAW,KAAK,eAAe,OAAO,QAAQ,QAAQ,OAAO;AAAA,IAC3E;AAEA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
