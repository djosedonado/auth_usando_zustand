{
  "version": 3,
  "sources": ["../../../src/dialects/ibmi/query-interface.ts"],
  "sourcesContent": ["import { Transaction } from '../../transaction';\nimport { rejectInvalidOptions } from '../../utils/check';\nimport { START_TRANSACTION_QUERY_SUPPORTABLE_OPTIONS } from '../abstract/query-generator-typescript';\nimport { AbstractQueryInterface } from '../abstract/query-interface';\nimport type {\n  CommitTransactionOptions,\n  RollbackTransactionOptions,\n  SetIsolationLevelOptions,\n  StartTransactionOptions,\n} from '../abstract/query-interface.types';\nimport type { IBMiConnection } from './connection-manager';\nimport type { IBMiDialect } from './index.js';\nimport { IBMiQueryInterfaceInternal } from './query-interface-internal.js';\n\nexport class IBMiQueryInterface<\n  Dialect extends IBMiDialect = IBMiDialect,\n> extends AbstractQueryInterface<Dialect> {\n  readonly #internalQueryInterface: IBMiQueryInterfaceInternal;\n\n  constructor(dialect: Dialect, internalQueryInterface?: IBMiQueryInterfaceInternal) {\n    internalQueryInterface ??= new IBMiQueryInterfaceInternal(dialect);\n\n    super(dialect, internalQueryInterface);\n    this.#internalQueryInterface = internalQueryInterface;\n  }\n\n  async _startTransaction(\n    transaction: Transaction,\n    options: StartTransactionOptions,\n  ): Promise<void> {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without the transaction object.');\n    }\n\n    if (options) {\n      rejectInvalidOptions(\n        'startTransactionQuery',\n        this.sequelize.dialect,\n        START_TRANSACTION_QUERY_SUPPORTABLE_OPTIONS,\n        this.sequelize.dialect.supports.startTransaction,\n        options,\n      );\n    }\n\n    const connection = transaction.getConnection() as IBMiConnection;\n    await connection.beginTransaction();\n    if (options.isolationLevel) {\n      await transaction.setIsolationLevel(options.isolationLevel);\n    }\n  }\n\n  async _commitTransaction(\n    transaction: Transaction,\n    _options: CommitTransactionOptions,\n  ): Promise<void> {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without the transaction object.');\n    }\n\n    const connection = transaction.getConnection() as IBMiConnection;\n    await connection.commit();\n  }\n\n  async _rollbackTransaction(\n    transaction: Transaction,\n    _options: RollbackTransactionOptions,\n  ): Promise<void> {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without the transaction object.');\n    }\n\n    const connection = transaction.getConnection() as IBMiConnection;\n    await connection.rollback();\n  }\n\n  async _setIsolationLevel(\n    transaction: Transaction,\n    options: SetIsolationLevelOptions,\n  ): Promise<void> {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error(\n        'Unable to set the isolation level for a transaction without the transaction object.',\n      );\n    }\n\n    const level = this.#internalQueryInterface.parseIsolationLevel(options.isolationLevel);\n    const connection = transaction.getConnection() as IBMiConnection;\n    await connection.setIsolationLevel(level);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA4B;AAC5B,mBAAqC;AACrC,wCAA4D;AAC5D,6BAAuC;AASvC,sCAA2C;AAEpC,MAAM,2BAEH,8CAAgC;AAAA,EAC/B;AAAA,EAET,YAAY,SAAkB,wBAAqD;AACjF,+BAA2B,IAAI,2DAA2B,OAAO;AAEjE,UAAM,SAAS,sBAAsB;AACrC,SAAK,0BAA0B;AAAA,EACjC;AAAA,EAEA,MAAM,kBACJ,aACA,SACe;AACf,QAAI,CAAC,eAAe,EAAE,uBAAuB,iCAAc;AACzD,YAAM,IAAI,MAAM,+DAA+D;AAAA,IACjF;AAEA,QAAI,SAAS;AACX;AAAA,QACE;AAAA,QACA,KAAK,UAAU;AAAA,QACf;AAAA,QACA,KAAK,UAAU,QAAQ,SAAS;AAAA,QAChC;AAAA,MACF;AAAA,IACF;AAEA,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,WAAW,iBAAiB;AAClC,QAAI,QAAQ,gBAAgB;AAC1B,YAAM,YAAY,kBAAkB,QAAQ,cAAc;AAAA,IAC5D;AAAA,EACF;AAAA,EAEA,MAAM,mBACJ,aACA,UACe;AACf,QAAI,CAAC,eAAe,EAAE,uBAAuB,iCAAc;AACzD,YAAM,IAAI,MAAM,gEAAgE;AAAA,IAClF;AAEA,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,WAAW,OAAO;AAAA,EAC1B;AAAA,EAEA,MAAM,qBACJ,aACA,UACe;AACf,QAAI,CAAC,eAAe,EAAE,uBAAuB,iCAAc;AACzD,YAAM,IAAI,MAAM,kEAAkE;AAAA,IACpF;AAEA,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,WAAW,SAAS;AAAA,EAC5B;AAAA,EAEA,MAAM,mBACJ,aACA,SACe;AACf,QAAI,CAAC,eAAe,EAAE,uBAAuB,iCAAc;AACzD,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,UAAM,QAAQ,KAAK,wBAAwB,oBAAoB,QAAQ,cAAc;AACrF,UAAM,aAAa,YAAY,cAAc;AAC7C,UAAM,WAAW,kBAAkB,KAAK;AAAA,EAC1C;AACF;",
  "names": []
}
