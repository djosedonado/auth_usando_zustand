{
  "version": 3,
  "sources": ["../../../src/dialects/mysql/index.ts"],
  "sourcesContent": ["import type { Sequelize } from '../../sequelize.js';\nimport { createUnspecifiedOrderedBindCollector, escapeMysqlMariaDbString } from '../../utils/sql';\nimport type { SupportableNumericOptions } from '../abstract';\nimport { AbstractDialect } from '../abstract';\nimport { MySqlConnectionManager } from './connection-manager';\nimport * as DataTypes from './data-types';\nimport { registerMySqlDbDataTypeParsers } from './data-types.db.js';\nimport { MySqlQuery } from './query';\nimport { MySqlQueryGenerator } from './query-generator';\nimport { MySqlQueryInterface } from './query-interface';\n\nconst numericOptions: SupportableNumericOptions = {\n  zerofill: true,\n  unsigned: true,\n};\n\nexport class MysqlDialect extends AbstractDialect {\n  static supports = AbstractDialect.extendSupport({\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    schemas: true,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE',\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1,\n    },\n    constraints: {\n      foreignKeyChecksDisableable: true,\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    dataTypes: {\n      COLLATE_BINARY: true,\n      GEOMETRY: true,\n      INTS: numericOptions,\n      FLOAT: { ...numericOptions, scaleAndPrecision: true },\n      REAL: { ...numericOptions, scaleAndPrecision: true },\n      DOUBLE: { ...numericOptions, scaleAndPrecision: true },\n      DECIMAL: numericOptions,\n      JSON: true,\n    },\n    jsonOperations: true,\n    jsonExtraction: {\n      unquoted: true,\n      quoted: true,\n    },\n    REGEXP: true,\n    uuidV1Generation: true,\n    globalTimeZoneConfig: true,\n    maxExecutionTimeHint: {\n      select: true,\n    },\n    createSchema: {\n      charset: true,\n      collate: true,\n      ifNotExists: true,\n    },\n    dropSchema: {\n      ifExists: true,\n    },\n    startTransaction: {\n      readOnly: true,\n    },\n  });\n\n  readonly connectionManager: MySqlConnectionManager;\n  readonly queryGenerator: MySqlQueryGenerator;\n  readonly queryInterface: MySqlQueryInterface;\n  readonly Query = MySqlQuery;\n  readonly dataTypesDocumentationUrl = 'https://dev.mysql.com/doc/refman/8.0/en/data-types.html';\n\n  // minimum supported version\n  readonly defaultVersion = '8.0.19';\n  readonly TICK_CHAR_LEFT = '`';\n  readonly TICK_CHAR_RIGHT = '`';\n\n  constructor(sequelize: Sequelize) {\n    super(sequelize, DataTypes, 'mysql');\n    this.connectionManager = new MySqlConnectionManager(this);\n    this.queryGenerator = new MySqlQueryGenerator(this);\n    this.queryInterface = new MySqlQueryInterface(this);\n\n    registerMySqlDbDataTypeParsers(this);\n  }\n\n  createBindCollector() {\n    return createUnspecifiedOrderedBindCollector();\n  }\n\n  escapeString(value: string): string {\n    return escapeMysqlMariaDbString(value);\n  }\n\n  escapeJson(value: unknown): string {\n    return `CAST(${super.escapeJson(value)} AS JSON)`;\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n\n  getDefaultSchema(): string {\n    return this.sequelize.options.database ?? '';\n  }\n\n  static getDefaultPort() {\n    return 3306;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAgF;AAEhF,sBAAgC;AAChC,gCAAuC;AACvC,gBAA2B;AAC3B,2BAA+C;AAC/C,mBAA2B;AAC3B,6BAAoC;AACpC,6BAAoC;AAEpC,MAAM,iBAA4C;AAAA,EAChD,UAAU;AAAA,EACV,UAAU;AACZ;AAEO,MAAM,qBAAqB,gCAAgB;AAAA,EAChD,OAAO,WAAW,gCAAgB,cAAc;AAAA,IAC9C,aAAa;AAAA,IACb,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,wCAAwC;AAAA,IACxC,SAAS;AAAA,IACT,SAAS;AAAA,MACP,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,IACrB;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,aAAa;AAAA,MACX,6BAA6B;AAAA,IAC/B;AAAA,IACA,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,gBAAgB;AAAA,MAChB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,MACpD,MAAM,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,MACnD,QAAQ,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,MACrD,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,IACA,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,MACd,UAAU;AAAA,MACV,QAAQ;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,MACpB,QAAQ;AAAA,IACV;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,IACA,YAAY;AAAA,MACV,UAAU;AAAA,IACZ;AAAA,IACA,kBAAkB;AAAA,MAChB,UAAU;AAAA,IACZ;AAAA,EACF,CAAC;AAAA,EAEQ;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,4BAA4B;AAAA;AAAA,EAG5B,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAE3B,YAAY,WAAsB;AAChC,UAAM,WAAW,WAAW,OAAO;AACnC,SAAK,oBAAoB,IAAI,iDAAuB,IAAI;AACxD,SAAK,iBAAiB,IAAI,2CAAoB,IAAI;AAClD,SAAK,iBAAiB,IAAI,2CAAoB,IAAI;AAElD,6DAA+B,IAAI;AAAA,EACrC;AAAA,EAEA,sBAAsB;AACpB,eAAO,kDAAsC;AAAA,EAC/C;AAAA,EAEA,aAAa,OAAuB;AAClC,eAAO,qCAAyB,KAAK;AAAA,EACvC;AAAA,EAEA,WAAW,OAAwB;AACjC,WAAO,QAAQ,MAAM,WAAW,KAAK;AAAA,EACvC;AAAA,EAEA,qBAAqB;AACnB,WAAO;AAAA,EACT;AAAA,EAEA,mBAA2B;AACzB,WAAO,KAAK,UAAU,QAAQ,YAAY;AAAA,EAC5C;AAAA,EAEA,OAAO,iBAAiB;AACtB,WAAO;AAAA,EACT;AACF;",
  "names": []
}
