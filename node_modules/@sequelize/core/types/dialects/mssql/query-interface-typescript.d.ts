import type { MssqlDialect } from '.';
import { Transaction } from '../../transaction';
import { AbstractQueryInterface } from '../abstract/query-interface';
import type { CommitTransactionOptions, CreateSavepointOptions, RollbackSavepointOptions, RollbackTransactionOptions, StartTransactionOptions } from '../abstract/query-interface.types';
import { MsSqlQueryInterfaceInternal } from './query-interface-internal';
export declare class MsSqlQueryInterfaceTypescript<Dialect extends MssqlDialect = MssqlDialect> extends AbstractQueryInterface<Dialect> {
    #private;
    constructor(dialect: Dialect, internalQueryInterface?: MsSqlQueryInterfaceInternal);
    _commitTransaction(transaction: Transaction, _options: CommitTransactionOptions): Promise<void>;
    _createSavepoint(transaction: Transaction, options: CreateSavepointOptions): Promise<void>;
    _rollbackSavepoint(transaction: Transaction, options: RollbackSavepointOptions): Promise<void>;
    _rollbackTransaction(transaction: Transaction, _options: RollbackTransactionOptions): Promise<void>;
    _startTransaction(transaction: Transaction, options: StartTransactionOptions): Promise<void>;
}
