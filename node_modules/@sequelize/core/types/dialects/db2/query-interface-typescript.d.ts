import { Transaction } from '../../transaction';
import { AbstractQueryInterface } from '../abstract/query-interface';
import type { CommitTransactionOptions, QiDropAllSchemasOptions, RollbackTransactionOptions, SetIsolationLevelOptions, StartTransactionOptions } from '../abstract/query-interface.types';
import type { Db2Dialect } from './index.js';
import { Db2QueryInterfaceInternal } from './query-interface-internal';
export declare class Db2QueryInterfaceTypeScript<Dialect extends Db2Dialect = Db2Dialect> extends AbstractQueryInterface<Dialect> {
    #private;
    constructor(dialect: Dialect, internalQueryInterface?: Db2QueryInterfaceInternal);
    dropAllSchemas(options?: QiDropAllSchemasOptions): Promise<void>;
    _commitTransaction(transaction: Transaction, _options: CommitTransactionOptions): Promise<void>;
    _rollbackTransaction(transaction: Transaction, _options: RollbackTransactionOptions): Promise<void>;
    _setIsolationLevel(transaction: Transaction, options: SetIsolationLevelOptions): Promise<void>;
    _startTransaction(transaction: Transaction, options: StartTransactionOptions): Promise<void>;
}
