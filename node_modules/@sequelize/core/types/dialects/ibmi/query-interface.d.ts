import { Transaction } from '../../transaction';
import { AbstractQueryInterface } from '../abstract/query-interface';
import type { CommitTransactionOptions, RollbackTransactionOptions, SetIsolationLevelOptions, StartTransactionOptions } from '../abstract/query-interface.types';
import type { IBMiDialect } from './index.js';
import { IBMiQueryInterfaceInternal } from './query-interface-internal.js';
export declare class IBMiQueryInterface<Dialect extends IBMiDialect = IBMiDialect> extends AbstractQueryInterface<Dialect> {
    #private;
    constructor(dialect: Dialect, internalQueryInterface?: IBMiQueryInterfaceInternal);
    _startTransaction(transaction: Transaction, options: StartTransactionOptions): Promise<void>;
    _commitTransaction(transaction: Transaction, _options: CommitTransactionOptions): Promise<void>;
    _rollbackTransaction(transaction: Transaction, _options: RollbackTransactionOptions): Promise<void>;
    _setIsolationLevel(transaction: Transaction, options: SetIsolationLevelOptions): Promise<void>;
}
